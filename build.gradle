plugins {
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'war'
    id 'idea'
    id 'eclipse'
    id 'jacoco'
    id "com.netflix.dgs.codegen" version "4.2.0"
    id "org.sonarqube" version "3.3"
    id "java-library"
    id "maven-publish"
    id "maven"
    id "io.github.gradle-nexus.publish-plugin" version "1.0.0"
}


group='com.spring-boot'
version = System.getenv('BUILD_NUMBER')
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

configurations {
    compileOnly.extendsFrom annotationProcessor
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3'
    implementation "com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter:latest.release"
    implementation 'org.flywaydb:flyway-core'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'joda-time:joda-time:2.10.6'
    implementation 'org.xerial:sqlite-jdbc:3.34.0'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'io.rest-assured:rest-assured:3.1.1'
    testImplementation 'io.rest-assured:spring-mock-mvc:3.1.1'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.vintage:junit-vintage-engine'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.1.3'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}
sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property 'sonar.projectName', 'spring-boot'
        property 'sonar.projectKey', 'spring-boot' + ':sonar-jacoco'
    }
}




publishing {
    publications {
        maven(MavenPublication) {
            artifact("build/libs/spring-boot-$version" + ".war") {
                extension 'war'
            }
        }
    }
    repositories {
        maven {
            name 'nexus'
            url 'http://localhost:8888/repository/maven-releases/'
                credentials {
                    username 'admin'
                    password 'admin'
                }
        }
    }
}



generateJava {
    schemaPaths = ["${projectDir}/src/main/resources/schema"] // List of directories containing schema files
    packageName = 'io.spring.graphql' // The package name to use to generate sources
}